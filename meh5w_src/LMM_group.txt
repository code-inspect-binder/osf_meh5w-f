model {

  #data for CC model is nagents, ntrials, index of vals, matrix of contributions (c), and average contribution (Ga)
  #data for EWA model is nagents, ntrials, ntokens, pi, and matrix of contributions (c)

  for (g in 1:ngroups) {

    for (n in 1:groupSize) {
      
      #--------------------------------------------------------------------------------------------------------------
      #----------------------------------individual level priors for both models-------------------------------------
      #--------------------------------------------------------------------------------------------------------------
      
      # ----------------- CC model ------
  
      omega1[n,g] ~ dbeta(1,1) #initial weighting of beliefs about others contributions in choice of own contribution, relative to prefs
      lambda[n,g] ~ dbeta(1,1) #decay rate in weighting of beliefs about others - prefs dominate over time
      gamma[n,g] ~ dbeta(1,1) #parameter weighting of beliefs about what others will contribute, relative to observed contribution
      p0[n,g] ~ dunif(0,20) #intercept of linear model relating preferred contributions to possible contribution values
      pbeta[n,g] ~ dbeta(1,1) #slope of linear model relating preferred contributions to possible contribution values
      
      for (i in 1:length(vals)) {
        pvals[n,i,g] <- p0[n,g] + (pbeta[n,g]*vals[i]) #vector of preferred contributions for each possible value - linear relationship
      }
      
      omega[n,1,g] <- omega1[n,g]
      
      #assume beliefs about others on first trial is reflected in first contribution. Simplification for model.
      Gb[n,1,g] <- c[n,1,g] 
      
      mu_c_CC[n,1,g] <- Ga[1,g]
      
      #---------------- EWA model ---------------------------
      # weighting of forgone versus received payoffs
      delta[n,g] ~ dbeta(1,1) #priors (0,1)
      
      #discounting of old trials - speed at which agents commit to a strategy priors (0,1)
      #higher number means older trials have great influence and strategy fixation is slower
      rho[n,g] ~ dbeta(1,1)
      
      #memory of old attractions - volatility assumption about environ. priors (0,1)
      #higher number means old attractions are weighted higher
      phi[n,g] ~ dbeta(1,1)
      
      #consistency of choice with attractions - inverse heat - explore exploit
      theta[n,g] ~ dgamma(0.1,0.1)
  
      #trial 1 - priors for activations A and experience N
      
      N[n,1,g] <- 1
      for (j in 1:ntokens) {
        A[n,1,j,g] <- 0#rnorm(10,10,10)
      }
      c[n,1,g] ~ dunif(0,ntokens)
      mu_c_EWA[n,1,g] ~ dunif(0,ntokens)
      
      nu_c[n,1,g] ~ dunif(0,ntokens)

  
    }
  }

  #--------------------------------------------------------------------------------------------------------------
  #----------------------------------Specify CC model -----------------------------------------------------------
  #--------------------------------------------------------------------------------------------------------------
  
  for (g in 1:ngroups) {

    for (t in 2:ntrials) {
      
      for (n in 1:groupSize) {
      
        Gb[n,t,g] <- (gamma[n,g]*(Gb[n,t-1,g]))+((1-gamma[n,g])*(Ga[t-1,g]))
        
        #this line is necessary to avoid zero indexing
        pval_index[n,t,g] <- ifelse(round(Gb[n,t,g])>1,round(Gb[n,t,g]),1)
        
        p[n,t,g] <- pvals[n,pval_index[n,t,g],g]
        
        omega[n,t,g] <- omega[n,t-1,g]*(1-lambda[n,g])#exp(-lambda[n,g])
        
        # departs from simulation function. Data needs to be stochastic,
        # so we don't simulate c directly, rather mean of c distribution
        mu_c_CC[n,t,g] <- ((omega[n,t,g])*Gb[n,t,g]) + ((1-omega[n,t,g])*p[n,t,g]) 
        
      }
      
    }
  
    #--------------------------------------------------------------------------------------------------------------
    #----------------------------------Specify EWA model -----------------------------------------------------------
    #--------------------------------------------------------------------------------------------------------------
    
    for (t in 2:ntrials) {
      
      for (n in 1:groupSize) {
      
        N[n,t,g] <- (rho[n,g]*N[n,t-1,g]) + 1 #eqn 2.1
        
        for (j in 1:ntokens) { 
          A[n,t,j,g] <- ( 
            
            (phi[n,g]*N[n,t-1,g]*A[n,t-1,j,g]) + #prior activations
            (delta[n,g] + ((1-delta[n,g])*(c_choice_index[n,t-1,g]==j))) * #indicates whether jth token was chosen
            ((((j+Gc[n,t-1,g])*pi)/groupSize)-j) # calculate payoff for each possible contrib., (Gc = mean of others' choice)
            
            )/
            N[n,t,g] #experience weighting
          
          expA[n,t,j,g] <- exp(theta[n,g]*A[n,t,j,g])
          
        }
        
        for (j in 1:ntokens) {    
          P[n,t,j,g] <- expA[n,t,j,g]/sum(expA[n,t,,g])
        }
        
        c_index[n,t,g] ~ dcat(P[n,t,,g])
        mu_c_EWA[n,t,g] <- vals[c_index[n,t,g]]
  
      }
    }
  
    # ----------------------mixture model----------------------------------
    for (n in 1:groupSize) {
      
      #sigma[n] ~ dgamma(.1,.1)
      psy[n,g] ~ dbeta(1,1)
      Z[n,g] ~ dbern(psy[n,g])
        
      for (t in 2:ntrials) {
  
        nu_c[n,t,g] <- ifelse(Z[n,g]==1,mu_c_CC[n,t,g],mu_c_EWA[n,t,g])
        
        c[n,t,g] ~ dnorm(nu_c[n,t,g],.1)
        
      }
    }
    
  }

}